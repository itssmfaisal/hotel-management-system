name: Build All Platform Installers

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Create .env file
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" > .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

      - name: Build with Maven
        run: ./mvnw.cmd clean package

      - name: List target directory
        run: dir target\*.jar

      - name: Copy .env to target
        run: copy .env target\.env

      - name: Create Windows EXE
        run: |
          jpackage --type exe --name HotelManagement --app-version 1.0 --input target --main-jar hotel-management-mine-1.0-SNAPSHOT-shaded.jar --main-class com.example.hotelmanagementmine.Launcher --dest installer --win-menu --win-menu-group Business --vendor "com.example"

      - uses: actions/upload-artifact@v4
        with:
          name: windows-exe
          path: installer/*.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Create .env file
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" > .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

      - name: Build with Maven
        run: ./mvnw clean package

      - name: List target directory
        run: ls -la target/*.jar

      - name: Copy .env to target
        run: cp .env target/.env

      - name: Create Debian Package
        run: |
          jpackage --type deb --name HotelManagement --app-version 1.0 --input target --main-jar hotel-management-mine-1.0-SNAPSHOT-shaded.jar --main-class com.example.hotelmanagementmine.Launcher --dest installer --linux-shortcut --linux-menu-group Business --vendor "com.example"

      - uses: actions/upload-artifact@v4
        with:
          name: linux-deb
          path: installer/*.deb

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Create .env file
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" > .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

      - name: Build with Maven
        run: ./mvnw clean package

      - name: List target directory
        run: ls -la target/*.jar

      - name: Copy .env to target
        run: cp .env target/.env

      - name: Create macOS DMG
        run: |
          jpackage --type dmg --name HotelManagement --app-version 1.0 --input target --main-jar hotel-management-mine-1.0-SNAPSHOT-shaded.jar --main-class com.example.hotelmanagementmine.Launcher --dest installer --mac-package-name "Hotel Management" --vendor "com.example"

      - uses: actions/upload-artifact@v4
        with:
          name: macos-dmg
          path: installer/*.dmg
